package {{$generatedArtifactPackageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * Logical HTTP port reflection for {@link {{$sourceArtifactSimpleName}}}.<p/>
 *
 * This class was generated automatically. Don't try to change it.
 */
@Reflection({{$sourceArtifactSimpleName}}.class)
{{$generatedAnnotation}}
public abstract class {{$generatedArtifactSimpleName}} implements {{$movableReflectionSimpleName}} {
  private final MovableInboundHttpPort underlyingPort;
  private final Reference<?> bridge = HttpPortEngines.get().bridge(this, {{$sourceArtifactSimpleName}}.class);

  public {{$generatedArtifactSimpleName}}(DownwardObjectFactory<? extends MovableInboundHttpPort> underlyingPortReflectionFactory) {
    this.underlyingPort = underlyingPortReflectionFactory.create(this);
  }

  @Mover
  @Override
  public {{$movableReflectionSimpleName}} open() {
    underlyingPort.open();
    return this;
  }

  @Mover
  @Override
  public {{$movableReflectionSimpleName}} shut() {
    underlyingPort.shut();
    return this;
  }

  @Override
  @MapperOfMoving
  public HttpResponseReflection exchange(HttpRequest request) throws HttpException {
    return HttpPortEngines.get().exchange(bridge, request);
  }
}
